<Window x:Class="MusicPLayerV2.Views.MainWindow"
        x:Name="MainWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MusicPLayerV2.Views"
        xmlns:localuc="clr-namespace:MusicPLayerV2.Views.UserControls"
        xmlns:localVMs="clr-namespace:MusicPLayerV2.ViewModels"
        xmlns:localModels="clr-namespace:MusicPLayerV2.Models"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:md="https://github.com/fantasticfiasco/mvvm-dialogs"
        xmlns:root="clr-namespace:MusicPLayerV2"
        md:DialogServiceViews.IsRegistered="True"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="700" Width="1000"
        WindowState="Normal"
        WindowStyle="None"
        StateChanged="MainWin_StateChanged"
        AllowsTransparency="True"
        Background="Black"
        LocationChanged="Window_LocationChanged"
        SizeChanged="MainWin_SizeChanged">
    <Window.Style>
        
        <Style TargetType="{x:Type local:MainWindow}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome GlassFrameThickness="3,30,3,3" CaptionHeight="30" CornerRadius="20"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:MainWindow}">
                        <Grid Background="Transparent">
                            <Border Background="{DynamicResource PrimaryColor}"/>
                            <Border Background="{DynamicResource PrimaryColor}"
                                    Margin="{Binding RelativeSource={RelativeSource TemplatedParent},
                                Path=(WindowChrome.WindowChrome).GlassFrameThickness}">
                                <ContentPresenter Content="{TemplateBinding Content}" />
                            </Border>
                            <Border VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="{Binding RelativeSource={RelativeSource TemplatedParent},
                                Path=(WindowChrome.WindowChrome).CaptionHeight}">
                                <TextBlock x:Name="titleText"
                                           Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title, FallbackValue=MainWin}" 
                                           FontFamily="{DynamicResource PrimaryFont}"
                                           FontSize="{DynamicResource TitleFontSize}"
                                           Foreground="{DynamicResource ForegroundColor}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Effect="{DynamicResource TextShadowEffect}"/>
                            </Border>

                            <Border x:Name="iconBorder"
                                    VerticalAlignment="Top" HorizontalAlignment="Left"
                                    Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(WindowChrome.WindowChrome).ResizeBorderThickness}"
                                    WindowChrome.IsHitTestVisibleInChrome="True">
                                <Image Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Icon}"
                                       Width="{x:Static SystemParameters.SmallIconWidth}"/>
                            </Border>
                            <Border HorizontalAlignment="Right" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True"
                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(WindowChrome.WindowChrome).GlassFrameThickness.Top}">
                                <StackPanel x:Name="BtnPanel" Orientation="Horizontal">
                                    <Button x:Name="MiniWinBtn" Content="{DynamicResource SymbolCode_ChromeMinimize}"
                                            Click="MiniWinBtn_Click" Style="{DynamicResource TitleBarBtn}"/>
                                    <Button x:Name="StateWinBtn" Content="{StaticResource SymbolCode_ChromeMaximize}"
                                            Click="StateWinBtn_Click" Style="{DynamicResource TitleBarBtn}"/>
                                    <Button x:Name="CloseWinBtn" Content="{DynamicResource SymbolCode_ChromeClose}"
                                            Click="CloseWinBtn_Click" Style="{DynamicResource TitleBarCloseBtn}"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="WindowState" Value="Maximized">
                                <Setter TargetName="BtnPanel" Property="Margin" Value="0 8 0 0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Window.DataContext>
        <localVMs:MainViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Background" Value="{DynamicResource PanelOpacity}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontFamily" Value="{DynamicResource SymbolFont}"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="FontSize" Value="{DynamicResource TabBarFontSize}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border x:Name="radioButtonBorder"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">

                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">

                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{DynamicResource SecondaryColorL}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="{DynamicResource SecondaryColor}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <Style x:Key="TitleBarBtn" TargetType="Button">
            <Setter Property="FontFamily" Value="{DynamicResource SymbolFont}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource PanelOpacity}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{DynamicResource PanelOpacityL}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TitleBarCloseBtn" TargetType="Button">
            <Setter Property="FontFamily" Value="{DynamicResource SymbolFont}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Red"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="DarkRed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LyricStyle" TargetType="localuc:LyricDisplayControl">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource LyricForegroundColor}"/>
            <Setter Property="HighLight" Value="{DynamicResource LyricHighlightColor}"/>
            <Setter Property="FontFamily" Value="{DynamicResource LyricFont}"/>
            <Setter Property="FontSize" Value="{DynamicResource LyricMediumFontSize}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=MainWin, Path=WindowMode}" Value="{x:Static local:MainWindowMode.Mini}">
                    <Setter Property="FontSize" Value="{DynamicResource LyricSmallFontSize}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PlayingListStyle" TargetType="localuc:PlayingListControl">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
            <Setter Property="FontSize" Value="{DynamicResource TextMediumFontSize}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=MainWin, Path=WindowMode}" Value="{x:Static local:MainWindowMode.Mini}">
                    <Setter Property="FontSize" Value="{DynamicResource TextSmallFontSize}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <!-- Example of Keyboard shortcuts -->
        <KeyBinding Command="{Binding OpenFileDialogCmd}" Gesture="Ctrl+O" />
        <KeyBinding Command="{Binding ExitCmd}" Gesture="Alt+F4" />
        <KeyBinding Command="{Binding ElementName=MainWin, Path=JumpToNextLyricCmd}" Gesture="Down"/>
        <KeyBinding Command="{Binding ElementName=MainWin, Path=JumpToPrevLyricCmd}" Gesture="Up"/>
    </Window.InputBindings>

    <Border CornerRadius="10" Background="{DynamicResource PrimaryColor}" ClipToBounds="True">
        <Grid>
            <Image x:Name="BackImage" Opacity="0.2" Stretch="UniformToFill" VerticalAlignment="Center" HorizontalAlignment="Center" 
               Source="{Binding MusicPicture}"
               Visibility="Collapsed">
                <Image.Effect>
                    <BlurEffect Radius="15"/>
                </Image.Effect>
            </Image>
            <Border x:Name="BackImageBack" Background="Transparent" HorizontalAlignment="Center"  VerticalAlignment="Top"  >
                <Image x:Name="BackImage2" Opacity="0.4" Stretch="Uniform" HorizontalAlignment="Right"
                   Source="{Binding MusicPicture}"
                   Visibility="Collapsed"/>
            </Border>
            <DockPanel  MouseLeftButtonDown="DockPanel_MouseLeftButtonDown">
                <Menu x:Name="MainMenu" DockPanel.Dock="Top" Margin="0,0,0.4,0">
                    <MenuItem Header="{DynamicResource Menu_File}">
                        <MenuItem Header="{DynamicResource Menu_File_Open}" Command="{Binding OpenFileDialogCmd}" CommandParameter="Open" InputGestureText="Ctrl+O" />
                        <MenuItem Header="{DynamicResource Menu_File_Add}" Command="{Binding OpenFileDialogCmd}" CommandParameter="Add" InputGestureText="Ctrl+P" />
                        <Separator />
                        <MenuItem Header="{DynamicResource Menu_File_Exit}" Command="{Binding ExitCmd}" InputGestureText="Alt+F4"/>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource Menu_Help}">
                        <MenuItem Header="{DynamicResource Menu_Help_About}" Command="{Binding ShowAboutDialogCmd}" InputGestureText="F2"/>
                        <MenuItem Header="{DynamicResource Menu_Help_OpenSetting}" Command="{Binding ShowSettingDialogCmd}" InputGestureText="Ctrl+,"/>
                    </MenuItem>
                </Menu>
                <DockPanel>
                    <Border x:Name="InfoBorder" DockPanel.Dock="Bottom">
                        <localuc:ControllerControl Width="auto" DataContext="{x:Static root:App.Controller}"/>
                    </Border>
                    <Border DockPanel.Dock="Top" MinWidth="300">
                        <DockPanel>
                            <Border x:Name="TabBtnBorder" Style="{DynamicResource CardBorderStyle}" DockPanel.Dock="Left">
                                <StackPanel Grid.Column="0">
                                    <RadioButton x:Name="AlbumArtTab"
                                         Content="{DynamicResource SymbolCode_ToAlbumArt}"
                                         Style="{DynamicResource RadioButtonStyle}"
                                         IsChecked="True"
                                         ToolTip="{DynamicResource ToolTip_AlbumArt}"
                                         GroupName="tab"
                                 Checked="RadioButton_Checked"
                                 />
                                    <RadioButton x:Name="LyricTab"
                                         Content="{DynamicResource SymbolCode_ToLyricDisplay}" Style="{DynamicResource RadioButtonStyle}"
                                         ToolTip="{DynamicResource ToolTip_Lyric}"
                                         Checked="RadioButton_Checked"
                                         GroupName="tab"/>
                                    <RadioButton x:Name="NowPLayingTab"
                                         Content="{DynamicResource SymbolCode_ToList}" Style="{DynamicResource RadioButtonStyle}"
                                         ToolTip="{DynamicResource ToolTip_NowPlaying}"
                                         Checked="RadioButton_Checked"
                                         GroupName="tab"/>
                                    <RadioButton x:Name="ViewLibrary"
                                                 Content="{DynamicResource SymbolCode_ToLibrary}" Style="{DynamicResource RadioButtonStyle}"
                                                 ToolTip="{DynamicResource ToolTip_Library}"
                                                 Checked="RadioButton_Checked"
                                                 GroupName="tab"/>
                                </StackPanel>
                            </Border>
                            <Border Style="{DynamicResource CardBorderStyle}" >
                                <Grid>
                                    <Border x:Name="AlbumArtBorder" >
                                        <Border.Effect>
                                            <BlurEffect Radius="30"/>
                                        </Border.Effect>
                                        <Border.Background>
                                            <ImageBrush ImageSource="{Binding MusicPicture}" Stretch="UniformToFill" Opacity="0.2" Viewport="0,0,0.5,1" TileMode="FlipX"/>
                                        </Border.Background>
                                    </Border>
                                    <TabControl x:Name="TagCtrl" Grid.Column="1" Grid.ColumnSpan="2"
                                            Background="{x:Null}"
                                            ItemContainerStyle="{DynamicResource TabItemStyle}"
                                            Padding="0"
                                            BorderThickness="0" TabStripPlacement="Left">
                                        <TabItem >
                                            <Border x:Name="ImageBorder">
                                                <Image x:Name="AlbumImage" Margin="10"
                                                       Source="{Binding MusicPicture}"
                                                       Stretch="Uniform"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"/>
                                            </Border>
                                        </TabItem>
                                        <TabItem>
                                            <localuc:LyricDisplayControl
                                                x:Name="LyricP"
                                                Style="{DynamicResource LyricStyle}"
                                                LyricFilePath="{Binding LRCPath}"
                                                Position="{Binding MusicPosition}"
                                            />
                                        </TabItem>
                                        <TabItem>
                                            <localuc:PlayingListControl
                                            x:Name="ListP"
                                            Style="{DynamicResource PlayingListStyle}"
                                            DataContext="{x:Static root:App.PlayingList}"/>
                                        </TabItem>
                                        <TabItem/>
                                    </TabControl>
                                </Grid>
                            </Border>
                        </DockPanel>
                    </Border>
                </DockPanel>
            </DockPanel>
        </Grid>

    </Border>
</Window>
