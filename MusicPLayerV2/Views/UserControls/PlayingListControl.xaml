<UserControl x:Name="UserControl" x:Class="MusicPLayerV2.Views.UserControls.PlayingListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:MusicPLayerV2.ViewModels"
             xmlns:local="clr-namespace:MusicPLayerV2.Views.UserControls"
             xmlns:util="clr-namespace:MusicPLayerV2.Utils"
             xmlns:localv="clr-namespace:MusicPLayerV2.Views"
             xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
             xmlns:Views="clr-namespace:MusicPLayerV2.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="LabelTriggerVisibleStyle" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="{DynamicResource MediumFontSize}"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
            <Setter Property="Effect" Value="{DynamicResource TextShadowEffect}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding WindowMode,
                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Views:MainWindow}}}"
                             Value="{x:Static localv:MainWindowMode.Mini}">
                    <Setter Property="FontSize" Value="{DynamicResource SmallFontSize}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                        <Setter Property="Background" Value="{Binding Background, ElementName=UserControl}" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex"  Value="1">
                        <Setter Property="Background" Value="{DynamicResource PanelOpacity}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <ListView BorderThickness="0" x:Name="ListViewL"
                  Width="{Binding ElementName=UserControl, Path=ActualWidth}"
                  Background="{Binding ElementName=UserControl, Path=Background, FallbackValue=White}"
                  ItemsSource="{Binding PlayingList, Mode=TwoWay}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                  SelectionChanged="ListViewL_SelectionChanged"
                  AlternationCount="2"
                  >
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{DynamicResource List_Menu_Remove_Selected_Item}"
                              Command="{Binding RemoveItemFromListCmd}"
                              />
                    <MenuItem Header="{DynamicResource List_Menu_Remove_All_Item}"
                              Command="{Binding RemoveAllItemFromListCmd}"
                              />
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.ItemTemplate>
                <DataTemplate DataType="{x:Type util:SongEntity}">
                    <Label Style="{DynamicResource LabelTriggerVisibleStyle}"
                           Width="{Binding  ActualWidth, ElementName=UserControl}"
                           HorizontalContentAlignment="Stretch"
                           VerticalContentAlignment="Stretch"
                           MouseDoubleClick="ListView_MouseDoubleClick">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="2*" x:Name="AlbumColumn"/>
                                <ColumnDefinition Width="80" x:Name="LengthColumn"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" x:Name="IsPlayingBlock" FontFamily="{DynamicResource SymbolFont}"
                                       Text="{DynamicResource SymbolCode_PlayBadge}" Visibility="Collapsed"
                                       FontSize="{DynamicResource TextSmallFontSize}"
                                       VerticalAlignment="Center" HorizontalAlignment="Center" Padding="5"/>
                            <TextBlock Grid.Column="1" Text="{Binding Title}"/>
                            <TextBlock x:Name="AlbumBlock" Grid.Column="2" Text="{Binding Album}"/>
                            <TextBlock Grid.Column="3" Text="{Binding LengthString}"/>
                        </Grid>
                    </Label>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsNowPlaying}" Value="true">
                            <Setter TargetName="IsPlayingBlock" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowMode,
                    RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Views:MainWindow}}}"
                             Value="{x:Static localv:MainWindowMode.Mini}">
                            <Setter TargetName="LengthColumn" Property="Width" Value="60"/>
                            <Setter TargetName="AlbumColumn" Property="Width" Value="auto"/>
                            <Setter TargetName="AlbumBlock" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ListView.ItemTemplate>
            
        </ListView>
    </Grid>
</UserControl>
